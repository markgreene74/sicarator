stages:
  - build
  - test

<% if (packageManager === "pyenv + poetry") { -%>
default:
  image: python:<%= pythonVersion %>

install:
  stage: build
  script:
    - echo "Update poetry to right version"
    - curl -sSL https://install.python-poetry.org | python - --version 1.7.0
    - export PATH="/root/.local/bin:$PATH"

    # create virtualenv in working directory to enable storage in cache with gitlab
    - echo "Create venv and install dependencies"
    - poetry config virtualenvs.in-project true
    - poetry run pip install --upgrade pip
    - poetry install
  cache:
    key:
      files:
        - poetry.lock
    paths:
      - .venv

.job_template:
  stage: test
  cache:
    key:
      files:
        - poetry.lock
    paths:
      - .venv
  before_script:
    - echo "Install poetry"
    - curl -sSL https://install.python-poetry.org | python - --version 1.7.0
    - export PATH="/root/.local/bin:$PATH"
<% } else { -%>

variables:
  UV_VERSION: 0.5
  PYTHON_VERSION: <%= pythonVersion.slice(0,4) %>
  BASE_LAYER: bookworm-slim

default:
  image: ghcr.io/astral-sh/uv:$UV_VERSION-python$PYTHON_VERSION-$BASE_LAYER

.job_template:
  variables:
    UV_CACHE_DIR: .uv-cache
  cache:
    - key:
        files:
          - uv.lock
      paths:
        - $UV_CACHE_DIR
  script:
    - uv cache prune --ci
<% } -%>

format-check:
  extends: .job_template
  script:
<% if (packageManager === "astral/uv") { -%>
    - apt-get update
    - apt-get install -y make
<% } -%>
    - make format-check

lint-check:
  extends: .job_template
  script:
<% if (packageManager === "astral/uv") { -%>
    - apt-get update
    - apt-get install -y make
<% } -%>
    - make lint-check

type-check:
  extends: .job_template
  script:
<% if (packageManager === "astral/uv") { -%>
    - apt-get update
    - apt-get install -y make
<% } -%>
    - make type-check

test:
  extends: .job_template
  script:
<% if (packageManager === "astral/uv") { -%>
    - apt-get update
    - apt-get install -y make
<% } -%>
    - make test
  artifacts:
    reports:
      junit: ./tests-results.xml
      coverage_report:
        coverage_format: cobertura
        path: ./coverage.xml

